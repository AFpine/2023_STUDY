#include <iostream>
#include <algorithm>
#include <vector>
#include <tuple>
using namespace std;

vector<int> p(10005, -1);
int T, V, E, u, v;

int find(int x) {
	if (p[x] < 0) return x;
	return p[x] = find(p[x]);
}

// 같은 그룹인지 아닌지 return.
bool is_diff_group(int u, int v) {
	u = find(u); v = find(v);
	if (u == v) return 0;
	if (p[u] == p[v]) p[u]--;
	if (p[u] < p[v]) p[v] = u;
	else p[u] = v;
	return 1;
}

int main(void)
{
	cin >> T;

	while (T--)
	{
		cin >> V >> E;

		fill(p.begin(), p.end(), -1);
		pair<int, int> edge[100005];

		for (int i = 0; i < E; i++) {
			cin >> u >> v;
			edge[i] = { u, v };
		}

		int cnt = 0;

		for (int i = 0; i < E; i++) {
			tie(u, v) = edge[i];
			if (!is_diff_group(u, v)) continue;
			cnt++;
			if (cnt == V - 1) break;
		}

		cout << cnt << '\n';
	}

	return 0;
}
